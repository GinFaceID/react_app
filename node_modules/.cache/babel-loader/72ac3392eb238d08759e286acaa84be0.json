{"ast":null,"code":"var _jsxFileName = \"/Users/chepond/Desktop/react_app/src/pages/main.js\";\nimport React from 'react';\nimport axios from 'axios';\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const photos = await this.fetchInstagramPhotos('https://www.instagram.com/sunsetwithbubbles/');\n      console.log(\"3456\"); // Do something with the photos\n    } catch (e) {\n      console.error('Fetching Instagram photos failed', e);\n    }\n  }\n\n  async fetchInstagramPhotos(accountUrl) {\n    const response = await axios.get(accountUrl);\n    const data = response.data.match(instagramRegExp)[1];\n    console.log(data);\n    const json = JSON.parse(data);\n    const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8);\n    const photos = edges.map(({\n      node\n    }) => {\n      return {\n        url: `https://www.instagram.com/p/${node.shortcode}/`,\n        thumbnailUrl: node.thumbnail_src,\n        displayUrl: node.display_url,\n        caption: node.edge_media_to_caption.edges[0].node.text\n      };\n    });\n    return photos;\n  }\n\n  render() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.persons.map(person => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, person.name)));\n  }\n\n}","map":{"version":3,"sources":["/Users/chepond/Desktop/react_app/src/pages/main.js"],"names":["React","axios","instagramRegExp","RegExp","Main","Component","state","persons","componentDidMount","photos","fetchInstagramPhotos","console","log","e","error","accountUrl","response","get","data","match","json","JSON","parse","edges","entry_data","ProfilePage","graphql","user","edge_owner_to_timeline_media","splice","map","node","url","shortcode","thumbnailUrl","thumbnail_src","displayUrl","display_url","caption","edge_media_to_caption","text","render","person","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,eAAe,GAAG,IAAIC,MAAJ,CAAW,sEAAX,CAAxB;AACA,eAAe,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACJC,MAAAA,OAAO,EAAE;AADL,KAFsC;AAAA;;AAM5C,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACA,YAAMC,MAAM,GAAG,MAAM,KAAKC,oBAAL,CAA0B,8CAA1B,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAFA,CAGA;AACD,KAJH,CAII,OAAOC,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACG,KAAR,CAAc,kCAAd,EAAkDD,CAAlD;AACD;AACJ;;AAEH,QAAMH,oBAAN,CAA2BK,UAA3B,EAAsC;AAClC,UAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAUF,UAAV,CAAvB;AACA,UAAMG,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBjB,eAApB,EAAqC,CAArC,CAAb;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACA,UAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAb;AACA,UAAMK,KAAK,GAAGH,IAAI,CAACI,UAAL,CAAgBC,WAAhB,CAA4B,CAA5B,EAA+BC,OAA/B,CAAuCC,IAAvC,CAA4CC,4BAA5C,CAAyEL,KAAzE,CAA+EM,MAA/E,CAAsF,CAAtF,EAAyF,CAAzF,CAAd;AACA,UAAMpB,MAAM,GAAGc,KAAK,CAACO,GAAN,CAAU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACrC,aAAO;AACLC,QAAAA,GAAG,EAAG,+BAA8BD,IAAI,CAACE,SAAU,GAD9C;AAELC,QAAAA,YAAY,EAAEH,IAAI,CAACI,aAFd;AAGLC,QAAAA,UAAU,EAAEL,IAAI,CAACM,WAHZ;AAILC,QAAAA,OAAO,EAAEP,IAAI,CAACQ,qBAAL,CAA2BhB,KAA3B,CAAiC,CAAjC,EAAoCQ,IAApC,CAAyCS;AAJ7C,OAAP;AAMD,KAPc,CAAf;AAQA,WAAO/B,MAAP;AACD;;AAEHgC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,KAAKnC,KAAL,CAAWC,OAAX,CAAmBuB,GAAnB,CAAuBY,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAM,CAACC,IAAZ,CAAjC,CADK,CAAP;AAGH;;AArC6C","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n\n    state = {\n        persons: []\n      }\n\n      async componentDidMount() {\n        try {\n            const photos = await this.fetchInstagramPhotos('https://www.instagram.com/sunsetwithbubbles/')\n            console.log(\"3456\");\n            // Do something with the photos\n          } catch (e) {\n            console.error('Fetching Instagram photos failed', e)\n          }\n      }\n      \n    async fetchInstagramPhotos(accountUrl){\n        const response = await axios.get(accountUrl)\n        const data = response.data.match(instagramRegExp)[1];\n        console.log(data);\n        const json = JSON.parse(data)\n        const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8)\n        const photos = edges.map(({ node }) => {\n          return {\n            url: `https://www.instagram.com/p/${node.shortcode}/`,\n            thumbnailUrl: node.thumbnail_src,\n            displayUrl: node.display_url,\n            caption: node.edge_media_to_caption.edges[0].node.text\n          }\n        })\n        return photos\n      }\n\n    render() {\n        return <ul>\n        { this.state.persons.map(person => <li>{person.name}</li>)}\n      </ul>\n    }\n}"]},"metadata":{},"sourceType":"module"}