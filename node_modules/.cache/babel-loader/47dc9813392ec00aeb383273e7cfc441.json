{"ast":null,"code":"var _jsxFileName = \"/Users/chepond/Desktop/react_app/src/pages/main.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nconst instagramTitleRegExp = new RegExp(/<title>\\n*(.*)\\(@gin_faceid.hk\\) • Instagram photos and videos\\n*<\\/title>/);\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      title: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const result = await this.fetchInstagramPhotos('https://www.instagram.com/gin_faceid.hk/');\n      console.log(result.title);\n      this.setState({\n        photos: result.photos,\n        title: result.title\n      }); // Do something with the photos\n    } catch (e) {\n      console.error('Fetching Instagram photos failed', e);\n    }\n  }\n\n  async fetchInstagramPhotos(accountUrl) {\n    const response = await axios.get(accountUrl);\n    var title = response.data.match(instagramTitleRegExp)[1];\n    console.log(title);\n    var data = response.data.match(instagramRegExp)[1];\n    data = data.substring(0, data.length - 1);\n    const json = JSON.parse(data);\n    const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8);\n    const photos = edges.map(({\n      node\n    }) => {\n      return {\n        url: `https://www.instagram.com/p/${node.shortcode}/`,\n        thumbnailUrl: node.thumbnail_src,\n        displayUrl: node.display_url,\n        caption: node.edge_media_to_caption.edges[0].node.text\n      };\n    }); // photos.forEach(x=>console.log(x.caption.replace(/(\\r\\n|\\n|\\r)/gm, '\\n')))\n    // console.log(photos);\n\n    return {\n      title,\n      photos\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"legend\", {\n      class: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), this.state.photos.map(photo => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: photo.displayUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), photo.caption.split(/(\\r\\n|\\n|\\r)/gm).map((i, key) => {\n        return React.createElement(\"div\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, i);\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/chepond/Desktop/react_app/src/pages/main.js"],"names":["React","axios","Card","instagramTitleRegExp","RegExp","instagramRegExp","Main","Component","state","photos","title","componentDidMount","result","fetchInstagramPhotos","console","log","setState","e","error","accountUrl","response","get","data","match","substring","length","json","JSON","parse","edges","entry_data","ProfilePage","graphql","user","edge_owner_to_timeline_media","splice","map","node","url","shortcode","thumbnailUrl","thumbnail_src","displayUrl","display_url","caption","edge_media_to_caption","text","render","photo","split","i","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\n\nconst instagramTitleRegExp = new RegExp(/<title>\\n*(.*)\\(@gin_faceid.hk\\) • Instagram photos and videos\\n*<\\/title>/)\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n\n    state = {\n        photos: [],\n        title: \"\"\n    }\n\n    async componentDidMount() {\n        try {\n            const result = await this.fetchInstagramPhotos('https://www.instagram.com/gin_faceid.hk/')\n            console.log(result.title)\n            this.setState({\n                photos: result.photos,\n                title: result.title\n            })\n            // Do something with the photos\n        } catch (e) {\n            console.error('Fetching Instagram photos failed', e)\n        }\n    }\n\n    async fetchInstagramPhotos(accountUrl) {\n        const response = await axios.get(accountUrl)\n        var title = response.data.match(instagramTitleRegExp)[1]\n        console.log(title)\n        var data = response.data.match(instagramRegExp)[1];\n        data = data.substring(0, data.length - 1);\n        const json = JSON.parse(data)\n        const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8)\n        const photos = edges.map(({ node }) => {\n            return {\n                url: `https://www.instagram.com/p/${node.shortcode}/`,\n                thumbnailUrl: node.thumbnail_src,\n                displayUrl: node.display_url,\n                caption: node.edge_media_to_caption.edges[0].node.text\n            }\n        })\n        // photos.forEach(x=>console.log(x.caption.replace(/(\\r\\n|\\n|\\r)/gm, '\\n')))\n        // console.log(photos);\n        return { title, photos }\n    }\n\n    render() {\n        return <div>\n            <br />\n            <legend class=\"text-center\">{this.state.title}</legend>\n            <br />\n            {this.state.photos.map(photo => {\n                return <div><Card >\n                    <Card.Img variant=\"top\" src={photo.displayUrl} />\n\n                </Card>\n                    {photo.caption.split(/(\\r\\n|\\n|\\r)/gm).map((i, key) => {\n                        return <div key={key}>{i}</div>\n                    })}</div>\n\n            })}\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}