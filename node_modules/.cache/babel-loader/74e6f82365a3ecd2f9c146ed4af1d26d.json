{"ast":null,"code":"var _jsxFileName = \"/Users/chepond/Desktop/react_app/src/pages/main.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport './main.css';\nconst instagramTitleRegExp = new RegExp(/<title>\\n*(.*)\\(@gin_faceid.hk\\) â€¢ Instagram photos and videos\\n*<\\/title>/);\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      title: \"\"\n    };\n    this.query = `{\n        story(slug:\"abc\"){\n          title\n        }\n      }`;\n\n    this.getPosts = async query => {\n      try {\n        const response = await axios.post('http://localhost:8080/graphql', {\n          query\n        });\n        console.log(response.data.stpry);\n        const html = response.data.data.story.title;\n        var title = html.match(instagramTitleRegExp)[1];\n        console.log(title);\n        var data = html.match(instagramRegExp)[1];\n        data = data.substring(0, data.length - 1);\n        const json = JSON.parse(data);\n        const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8);\n        const photos = edges.map(({\n          node\n        }) => {\n          return {\n            url: `https://www.instagram.com/p/${node.shortcode}/`,\n            thumbnailUrl: node.thumbnail_src,\n            displayUrl: node.display_url,\n            caption: node.edge_media_to_caption.edges[0].node.text\n          };\n        });\n        photos.forEach(x => console.log(x.caption.replace(/(\\r\\n|\\n|\\r)/gm, '\\n')));\n        console.log(photos);\n        return {\n          title,\n          photos\n        }; // Log the response so we can look at it in the console\n        //   console.log(response.data)\n        // Set the data to the state\n      } catch (error) {\n        // If there's an error, set the error to the state\n        console.log(\"graphql error\");\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const result = await this.getPosts(this.query); // const result = await this.fetchInstagramPhotos('https://www.instagram.com/gin_faceid.hk/')\n\n      console.log(JSON.stringify(result));\n      this.setState({\n        photos: result.photos,\n        title: result.title\n      }); // Do something with the photos\n    } catch (e) {\n      console.error('Fetching Instagram photos failed', e);\n    }\n  }\n\n  async fetchInstagramPhotos(accountUrl) {\n    const response = await axios.get(accountUrl);\n    console.log(response.data);\n    var title = response.data.match(instagramTitleRegExp)[1];\n    console.log(title);\n    var data = response.data.match(instagramRegExp)[1];\n    data = data.substring(0, data.length - 1);\n    const json = JSON.parse(data);\n    const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8);\n    const photos = edges.map(({\n      node\n    }) => {\n      return {\n        url: `https://www.instagram.com/p/${node.shortcode}/`,\n        thumbnailUrl: node.thumbnail_src,\n        displayUrl: node.display_url,\n        caption: node.edge_media_to_caption.edges[0].node.text\n      };\n    }); // photos.forEach(x=>console.log(x.caption.replace(/(\\r\\n|\\n|\\r)/gm, '\\n')))\n    // console.log(photos);\n\n    return {\n      title,\n      photos\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"legend\", {\n      align: \"center\",\n      style: {\n        color: \"#9A8873\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), this.state.photos.map(photo => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: photo.displayUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), photo.caption.split(/(\\r\\n|\\n|\\r)/gm).map((i, key) => {\n        return React.createElement(\"div\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, i);\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/chepond/Desktop/react_app/src/pages/main.js"],"names":["React","axios","Card","instagramTitleRegExp","RegExp","instagramRegExp","Main","Component","state","photos","title","query","getPosts","response","post","console","log","data","stpry","html","story","match","substring","length","json","JSON","parse","edges","entry_data","ProfilePage","graphql","user","edge_owner_to_timeline_media","splice","map","node","url","shortcode","thumbnailUrl","thumbnail_src","displayUrl","display_url","caption","edge_media_to_caption","text","forEach","x","replace","error","componentDidMount","result","stringify","setState","e","fetchInstagramPhotos","accountUrl","get","render","color","photo","split","i","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport './main.css';\n\nconst instagramTitleRegExp = new RegExp(/<title>\\n*(.*)\\(@gin_faceid.hk\\) â€¢ Instagram photos and videos\\n*<\\/title>/)\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n\n    state = {\n        photos: [],\n        title: \"\"\n    }\n    query = `{\n        story(slug:\"abc\"){\n          title\n        }\n      }`\n\n    getPosts = async (query) => {\n        try {\n          const response = await axios.post('http://localhost:8080/graphql', {\n            query,\n\n          });\n          console.log(response.data.stpry);\n          const html = response.data.data.story.title\n          var title = html.match(instagramTitleRegExp)[1]\n        console.log(title)\n        var data = html.match(instagramRegExp)[1];\n        data = data.substring(0, data.length - 1);\n        const json = JSON.parse(data)\n        const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8)\n        const photos = edges.map(({ node }) => {\n            return {\n                url: `https://www.instagram.com/p/${node.shortcode}/`,\n                thumbnailUrl: node.thumbnail_src,\n                displayUrl: node.display_url,\n                caption: node.edge_media_to_caption.edges[0].node.text\n            }\n        })\n        photos.forEach(x=>console.log(x.caption.replace(/(\\r\\n|\\n|\\r)/gm, '\\n')))\n        console.log(photos);\n        return { title, photos }\n          // Log the response so we can look at it in the console\n        //   console.log(response.data)\n      \n          // Set the data to the state\n          \n      \n        } catch (error) {\n          // If there's an error, set the error to the state\n          console.log(\"graphql error\")\n        }\n      }\n\n    async componentDidMount() {\n        try {\n            const result = await this.getPosts(this.query)\n            // const result = await this.fetchInstagramPhotos('https://www.instagram.com/gin_faceid.hk/')\n            console.log(JSON.stringify(result))\n            this.setState({\n                photos: result.photos,\n                title: result.title\n            })\n            // Do something with the photos\n        } catch (e) {\n            console.error('Fetching Instagram photos failed', e)\n        }\n    }\n\n    async fetchInstagramPhotos(accountUrl) {\n        const response = await axios.get(accountUrl)\n        console.log(response.data)\n        var title = response.data.match(instagramTitleRegExp)[1]\n        console.log(title)\n        var data = response.data.match(instagramRegExp)[1];\n        data = data.substring(0, data.length - 1);\n        const json = JSON.parse(data)\n        const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8)\n        const photos = edges.map(({ node }) => {\n            return {\n                url: `https://www.instagram.com/p/${node.shortcode}/`,\n                thumbnailUrl: node.thumbnail_src,\n                displayUrl: node.display_url,\n                caption: node.edge_media_to_caption.edges[0].node.text\n            }\n        })\n        // photos.forEach(x=>console.log(x.caption.replace(/(\\r\\n|\\n|\\r)/gm, '\\n')))\n        // console.log(photos);\n        return { title, photos }\n    }\n\n    render() {\n        return <div>\n            <br />\n            <br />\n            <legend align=\"center\" style={{color: \"#9A8873\"}}>{this.state.title}</legend>\n            <br />\n            {this.state.photos.map(photo => {\n                return <div><Card >\n                    <Card.Img variant=\"top\" src={photo.displayUrl} />\n\n                </Card>\n                    {photo.caption.split(/(\\r\\n|\\n|\\r)/gm).map((i, key) => {\n                        return <div key={key}>{i}</div>\n                    })}</div>\n\n            })}\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}