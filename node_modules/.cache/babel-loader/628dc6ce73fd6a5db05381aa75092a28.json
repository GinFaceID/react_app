{"ast":null,"code":"var _jsxFileName = \"/Users/chepond/Desktop/react_app/src/pages/main.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nconst instagramTitleRegExp = new RegExp(/<title>\\n*(.*)\\(@gin_faceid.hk\\) • Instagram photos and videos\\n*<\\/title>/);\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const list = await this.fetchInstagramPhotos('https://www.instagram.com/gin_faceid.hk/');\n      this.setState({\n        photos: list\n      }); // Do something with the photos\n    } catch (e) {\n      console.error('Fetching Instagram photos failed', e);\n    }\n  }\n\n  async fetchInstagramPhotos(accountUrl) {\n    const response = await axios.get(accountUrl);\n    var title = response.data.match(instagramTitleRegExp)[1];\n    console.log(title);\n    var data = response.data.match(instagramRegExp)[1];\n    data = data.substring(0, data.length - 1);\n    const json = JSON.parse(data);\n    const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8);\n    const photos = edges.map(({\n      node\n    }) => {\n      return {\n        url: `https://www.instagram.com/p/${node.shortcode}/`,\n        thumbnailUrl: node.thumbnail_src,\n        displayUrl: node.display_url,\n        caption: node.edge_media_to_caption.edges[0].node.text\n      };\n    });\n    photos.forEach(x => console.log(x.caption.replace(/(\\r\\n|\\n|\\r)/gm, '\\n')));\n    console.log(photos);\n    return photos;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      class: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"abc\"), this.state.photos.map(photo => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: photo.displayUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), photo.caption.split(/(\\r\\n|\\n|\\r)/gm).map((i, key) => {\n        return React.createElement(\"div\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, i);\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/chepond/Desktop/react_app/src/pages/main.js"],"names":["React","axios","Card","instagramTitleRegExp","RegExp","instagramRegExp","Main","Component","state","photos","componentDidMount","list","fetchInstagramPhotos","setState","e","console","error","accountUrl","response","get","title","data","match","log","substring","length","json","JSON","parse","edges","entry_data","ProfilePage","graphql","user","edge_owner_to_timeline_media","splice","map","node","url","shortcode","thumbnailUrl","thumbnail_src","displayUrl","display_url","caption","edge_media_to_caption","text","forEach","x","replace","render","photo","split","i","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\n\nconst instagramTitleRegExp = new RegExp(/<title>\\n*(.*)\\(@gin_faceid.hk\\) • Instagram photos and videos\\n*<\\/title>/)\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n\n    state = {\n        photos: []\n    }\n\n    async componentDidMount() {\n        try {\n            const list = await this.fetchInstagramPhotos('https://www.instagram.com/gin_faceid.hk/')\n            this.setState({\n                photos: list\n            })\n            // Do something with the photos\n        } catch (e) {\n            console.error('Fetching Instagram photos failed', e)\n        }\n    }\n\n    async fetchInstagramPhotos(accountUrl) {\n        const response = await axios.get(accountUrl)\n        var title = response.data.match(instagramTitleRegExp)[1]\n        console.log(title)\n        var data = response.data.match(instagramRegExp)[1];\n        data = data.substring(0, data.length - 1);\n        const json = JSON.parse(data)\n        const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8)\n        const photos = edges.map(({ node }) => {\n            return {\n                url: `https://www.instagram.com/p/${node.shortcode}/`,\n                thumbnailUrl: node.thumbnail_src,\n                displayUrl: node.display_url,\n                caption: node.edge_media_to_caption.edges[0].node.text\n            }\n        })\n        photos.forEach(x=>console.log(x.caption.replace(/(\\r\\n|\\n|\\r)/gm, '\\n')))\n        console.log(photos);\n        return photos\n    }\n\n    render() {\n        return <div>\n            <legend class=\"text-center\">\n                abc\n                </legend>\n            {this.state.photos.map(photo => {\n                return <div><Card >\n                    <Card.Img variant=\"top\" src={photo.displayUrl} />\n                    \n                </Card>\n                {photo.caption.split(/(\\r\\n|\\n|\\r)/gm).map((i,key) => {\n                    return <div key={key}>{i}</div>\n                })}</div>\n            \n            })}\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}