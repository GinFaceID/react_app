{"ast":null,"code":"var _jsxFileName = \"/Users/chepond/Desktop/react_app/src/pages/main.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const list = await this.fetchInstagramPhotos('https://www.instagram.com/gin_faceid.hk/');\n      this.setState({\n        photos: list\n      }); // Do something with the photos\n    } catch (e) {\n      console.error('Fetching Instagram photos failed', e);\n    }\n  }\n\n  async fetchInstagramPhotos(accountUrl) {\n    const response = await axios.get(accountUrl);\n    var data = response.data.match(instagramRegExp)[1];\n    data = data.substring(0, data.length - 1);\n    const json = JSON.parse(data);\n    const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8);\n    const photos = edges.map(({\n      node\n    }) => {\n      return {\n        url: `https://www.instagram.com/p/${node.shortcode}/`,\n        thumbnailUrl: node.thumbnail_src,\n        displayUrl: node.display_url,\n        caption: node.edge_media_to_caption.edges[0].node.text\n      };\n    });\n    return photos;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.list.map(photo => {\n      return React.createElement(Card, {\n        style: {\n          width: '18rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: photo.displayUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/chepond/Desktop/react_app/src/pages/main.js"],"names":["React","axios","Card","instagramRegExp","RegExp","Main","Component","state","photos","componentDidMount","list","fetchInstagramPhotos","setState","e","console","error","accountUrl","response","get","data","match","substring","length","json","JSON","parse","edges","entry_data","ProfilePage","graphql","user","edge_owner_to_timeline_media","splice","map","node","url","shortcode","thumbnailUrl","thumbnail_src","displayUrl","display_url","caption","edge_media_to_caption","text","render","photo","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,MAAMC,eAAe,GAAG,IAAIC,MAAJ,CAAW,sEAAX,CAAxB;AACA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACJC,MAAAA,MAAM,EAAE;AADJ,KAFsC;AAAA;;AAM5C,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACA,YAAMC,IAAI,GAAG,MAAM,KAAKC,oBAAL,CAA0B,0CAA1B,CAAnB;AACA,WAAKC,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAEE;AADE,OAAd,EAFA,CAKA;AACD,KANH,CAMI,OAAOG,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd,EAAkDF,CAAlD;AACD;AACJ;;AAEH,QAAMF,oBAAN,CAA2BK,UAA3B,EAAsC;AAClC,UAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUF,UAAV,CAAvB;AACA,QAAIG,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBjB,eAApB,EAAqC,CAArC,CAAX;AACAgB,IAAAA,IAAI,GAAGA,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkBF,IAAI,CAACG,MAAL,GAAc,CAAhC,CAAP;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAb;AACA,UAAMO,KAAK,GAAGH,IAAI,CAACI,UAAL,CAAgBC,WAAhB,CAA4B,CAA5B,EAA+BC,OAA/B,CAAuCC,IAAvC,CAA4CC,4BAA5C,CAAyEL,KAAzE,CAA+EM,MAA/E,CAAsF,CAAtF,EAAyF,CAAzF,CAAd;AACA,UAAMxB,MAAM,GAAGkB,KAAK,CAACO,GAAN,CAAU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACrC,aAAO;AACLC,QAAAA,GAAG,EAAG,+BAA8BD,IAAI,CAACE,SAAU,GAD9C;AAELC,QAAAA,YAAY,EAAEH,IAAI,CAACI,aAFd;AAGLC,QAAAA,UAAU,EAAEL,IAAI,CAACM,WAHZ;AAILC,QAAAA,OAAO,EAAEP,IAAI,CAACQ,qBAAL,CAA2BhB,KAA3B,CAAiC,CAAjC,EAAoCQ,IAApC,CAAyCS;AAJ7C,OAAP;AAMD,KAPc,CAAf;AAQA,WAAOnC,MAAP;AACD;;AAEHoC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,KAAKrC,KAAL,CAAWG,IAAX,CAAgBuB,GAAhB,CAAoBY,KAAK,IAC3B;AAAC,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,KAAlB;AAAwB,QAAA,GAAG,EAAED,KAAK,CAACN,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,CAAP;AAEG,KAHF,CADK,CAAP;AAMH;;AA1C6C","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {Card} from 'react-bootstrap';\n\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/);\nexport default class Main extends React.Component {\n\n    state = {\n        photos: []\n      }\n\n      async componentDidMount() {\n        try {\n            const list = await this.fetchInstagramPhotos('https://www.instagram.com/gin_faceid.hk/')\n            this.setState({\n                photos: list\n            })\n            // Do something with the photos\n          } catch (e) {\n            console.error('Fetching Instagram photos failed', e)\n          }\n      }\n      \n    async fetchInstagramPhotos(accountUrl){\n        const response = await axios.get(accountUrl)\n        var data = response.data.match(instagramRegExp)[1];\n        data = data.substring(0, data.length - 1);\n        const json = JSON.parse(data)\n        const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8)\n        const photos = edges.map(({ node }) => {\n          return {\n            url: `https://www.instagram.com/p/${node.shortcode}/`,\n            thumbnailUrl: node.thumbnail_src,\n            displayUrl: node.display_url,\n            caption: node.edge_media_to_caption.edges[0].node.text\n          }\n        })\n        return photos\n      }\n\n    render() {\n        return <div>\n        { this.state.list.map(photo => \n        {return <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src={photo.displayUrl} />   \n    </Card>})}\n      </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}